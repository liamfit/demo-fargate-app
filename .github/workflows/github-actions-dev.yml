name: Build and Deploy - Development

on: 
  pull_request:

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
          cache: maven

      - name: Package with Maven
        id: package
        run: |
          ./mvnw package 
          mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_INFRA_ACCOUNT_ID }}:role/${{ secrets.AWS_INFRA_ACCOUNT_ROLE }}
          role-session-name: samplerolesession
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set container name
        run: echo "CONTAINER_NAME=${GITHUB_REPOSITORY#*\/}" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$CONTAINER_NAME:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$CONTAINER_NAME:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$CONTAINER_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Render task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
          task-definition: .aws/task-definition.json

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: task-definition
          path: ${{ steps.task-def.outputs.task-definition }}

  deploy-to-dev:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ACCOUNT_ROLE }}
          role-session-name: samplerolesession
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: task-definition
          path: .aws/task-definition.json

      - name: Unzip artifact
        run: unzip -p task-definition.zip > .aws/task-definition.json
      
      - name: Output task definition
        run: cat .aws/task-definition.json